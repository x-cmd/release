# shellcheck shell=dash

(
    [ -d release ] || command git clone git@github.com:x-cmd/release || return

    distfolder="$PWD/release/dist"
    sumfolder="$PWD/release/sum"
    index_yml="$PWD/release/index.yml"
    ___x_cmd_cmds_mkdir -p "$distfolder" "$sumfolder"

    # x gita git@github.com:x-cmd/x-cmd-version release "$distfolder" "$sumfolder"
    x rmrf x-cmd-version
    x:info "正在下载 x-cmd/x-cmd-version"
    command git clone git@github.com:x-cmd/x-cmd-version    || return

    (
        ___x_cmd_cmds_cd x-cmd-version || {
            x:error "Cannot ___x_cmd_cmds_cd to release"
            exit 1
        }

        x ws release "$distfolder" "$sumfolder" || exit 1

        x:info "Copy $PWD/version/index.yml ==> $index_yml"
        cp -rf version/index.yml "$index_yml"
        command git add version/index.yml
        command git status -s
        command git commit -m "Update: version/index.yml"
        command git push git@github.com:x-cmd/x-cmd-version main || true
    ) && (
        ___x_cmd_cmds_cd release || {
            x:error "Cannot ___x_cmd_cmds_cd to release"
            exit 1
        }

        command git add .
        command git status -s
        command git commit -m ... || return
        command git push git@github.com:x-cmd/release main
        command git push git@gitee.com:x-cmd/release main
        command git push git@gitcode.net:x-cmd/release main

        x gh action workflow run -r x-cmd/xx oss-sync.yml
    ) || return

    (
        ___x_cmd_cmds_cd x-cmd-version || {
            x:error "Cannnot cd to x-cmd/x-cmd-version"
            exit 1
        }
        x ws index pkg
    )
)
